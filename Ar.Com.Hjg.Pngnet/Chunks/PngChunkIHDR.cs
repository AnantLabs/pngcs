// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 6/1/11 9:13 a.m.    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace Ar.Com.Hjg.Pngcs.Chunks {
	
	using Ar.Com.Hjg.Pngcs;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	public class PngChunkIHDR : PngChunk {
		public int cols;
		public int rows;
		public int bitspc;
		public int colormodel;
		public int compmeth;
		public int filmeth;
		public int interlaced;
	
		// http://www.w3.org/TR/PNG/#11IHDR
		//
		public PngChunkIHDR(ImageInfo info) : base(Ar.Com.Hjg.Pngcs.Chunks.ChunkHelper.IHDR_TEXT, info) {
		}
	
		public override ChunkRaw CreateChunk() {
			ChunkRaw c = new ChunkRaw(13, Ar.Com.Hjg.Pngcs.Chunks.ChunkHelper.IHDR, true);
			int offset = 0;
			Ar.Com.Hjg.Pngcs.PngHelper.WriteInt4tobytes(cols, c.data, offset);
			offset += 4;
			Ar.Com.Hjg.Pngcs.PngHelper.WriteInt4tobytes(rows, c.data, offset);
			offset += 4;
			c.data[offset++] = (byte) bitspc;
			c.data[offset++] = (byte) colormodel;
			c.data[offset++] = (byte) compmeth;
			c.data[offset++] = (byte) filmeth;
			c.data[offset++] = (byte) interlaced;
			return c;
		}
	
		public override void ParseFromChunk(ChunkRaw c) {
			if (c.len != 13)
				throw new PngjException("Bad IDHR len " + c.len);
			MemoryStream st = c.GetAsByteStream();
			cols = Ar.Com.Hjg.Pngcs.PngHelper.ReadInt4(st);
			rows = Ar.Com.Hjg.Pngcs.PngHelper.ReadInt4(st);
			// bit depth: number of bits per channel
			bitspc = Ar.Com.Hjg.Pngcs.PngHelper.ReadByte(st);
			colormodel = Ar.Com.Hjg.Pngcs.PngHelper.ReadByte(st);
			compmeth = Ar.Com.Hjg.Pngcs.PngHelper.ReadByte(st);
			filmeth = Ar.Com.Hjg.Pngcs.PngHelper.ReadByte(st);
			interlaced = Ar.Com.Hjg.Pngcs.PngHelper.ReadByte(st);
		}
	
		public override void CloneDataFromRead(PngChunk other) {
			PngChunkIHDR otherx = (PngChunkIHDR) other;
			cols = otherx.cols;
			rows = otherx.rows;
			bitspc = otherx.bitspc;
			colormodel = otherx.colormodel;
			compmeth = otherx.compmeth;
			filmeth = otherx.filmeth;
			interlaced = otherx.interlaced;
		}
	}
}
