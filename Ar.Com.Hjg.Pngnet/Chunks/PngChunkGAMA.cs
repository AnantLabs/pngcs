// --------------------------------------------------------------------------------------------------
// This file was automatically generated by J2CS Translator (http://j2cstranslator.sourceforge.net/). 
// Version 1.3.6.20110331_01     
// 6/1/11 9:13 a.m.    
// ${CustomMessageForDisclaimer}                                                                             
// --------------------------------------------------------------------------------------------------
 namespace Ar.Com.Hjg.Pngcs.Chunks {
	
	using Ar.Com.Hjg.Pngcs;
	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.ComponentModel;
	using System.IO;
	using System.Runtime.CompilerServices;
	
	/*
	 */
	public class PngChunkGAMA : PngChunk {
		// http://www.w3.org/TR/PNG/#11gAMA
		private double gamma;
	
		public PngChunkGAMA(ImageInfo info) : base(Ar.Com.Hjg.Pngcs.Chunks.ChunkHelper.gAMA_TEXT, info) {
		}
	
		public override ChunkRaw CreateChunk() {
			ChunkRaw c = CreateEmptyChunk(4, true);
			int g = (int) (gamma * 100000 + 0.5d);
			Ar.Com.Hjg.Pngcs.PngHelper.WriteInt4tobytes(g, c.data, 0);
			return c;
		}
	
		public override void ParseFromChunk(ChunkRaw chunk) {
			if (chunk.len != 4)
				throw new PngjException("bad chunk " + chunk);
			int g = Ar.Com.Hjg.Pngcs.PngHelper.ReadInt4fromBytes(chunk.data, 0);
			gamma = ((double) g) / 100000.0d;
		}
	
		public override void CloneDataFromRead(PngChunk other) {
			gamma = ((PngChunkGAMA) other).gamma;
		}
	
		public double GetGamma() {
			return gamma;
		}
	
		public void SetGamma(double gamma_0) {
			this.gamma = gamma_0;
		}
	}
}
